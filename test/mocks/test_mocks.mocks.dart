// Mocks generated by Mockito 5.4.2 from annotations
// in pusher_channels_test_app/test/mocks/test_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:pusher_channels_test_app/core/domain/failure.dart' as _i5;
import 'package:pusher_channels_test_app/core/utils/either/either.dart' as _i4;
import 'package:pusher_channels_test_app/features/settings/domain/repositories/settings_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepository extends _i1.Mock
    implements _i2.SettingsRepository {
  @override
  _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>> getThemeName() =>
      (super.noSuchMethod(
        Invocation.method(
          #getThemeName,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>>.value(
                _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, String?>>(
          this,
          Invocation.method(
            #getThemeName,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>>.value(
                _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, String?>>(
          this,
          Invocation.method(
            #getThemeName,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>> getLocaleCode() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocaleCode,
          [],
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>>.value(
                _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, String?>>(
          this,
          Invocation.method(
            #getLocaleCode,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>>.value(
                _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, String?>>(
          this,
          Invocation.method(
            #getLocaleCode,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure<Exception>, String?>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure<Exception>, void>> saveTheme(
          String? themeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTheme,
          [themeName],
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure<Exception>, void>>.value(
            _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, void>>(
          this,
          Invocation.method(
            #saveTheme,
            [themeName],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure<Exception>, void>>.value(
                _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, void>>(
          this,
          Invocation.method(
            #saveTheme,
            [themeName],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure<Exception>, void>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure<Exception>, void>> saveLocale(
          String? localeCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLocale,
          [localeCode],
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure<Exception>, void>>.value(
            _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, void>>(
          this,
          Invocation.method(
            #saveLocale,
            [localeCode],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure<Exception>, void>>.value(
                _i6.dummyValue<_i4.Either<_i5.Failure<Exception>, void>>(
          this,
          Invocation.method(
            #saveLocale,
            [localeCode],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure<Exception>, void>>);
}
